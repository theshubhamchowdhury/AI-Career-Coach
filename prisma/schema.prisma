generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Payment {
  id                String  @id @default(uuid())
  razorpayOrderId   String
  amount            Int
  courseId          Int
  courseTitle       String
  status            String
  userId            String
  razorpayPaymentId String?
  razorpaySignature String?

  // ðŸ”— Relation back to User
  user User @relation(fields: [userId], references: [id])
}

model User {
  id              String           @id @default(uuid())
  clerkUserId     String           @unique
  email           String           @unique
  name            String?
  payments        Payment[]
  imageUrl        String?
  industry        String?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  bio             String?
  experience      Int?
  skills          String[]
  assessments     Assessment[]
  coverLetter     CoverLetter[]
  resume          Resume?
  industryInsight IndustryInsight? @relation(fields: [industry], references: [industry])
}

model Assessment {
  id             String   @id @default(cuid())
  userId         String
  category       String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  improvementTip String?
  questions      Json[]
  quizScore      Float
  user           User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Resume {
  id        String   @id @default(cuid())
  userId    String   @unique
  content   String
  atsScore  Float?
  feedback  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model CoverLetter {
  id             String   @id @default(cuid())
  userId         String
  content        String
  jobDescription String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  companyName    String
  jobTitle       String
  status         String   @default("draft")
  user           User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model IndustryInsight {
  id                String   @id @default(cuid())
  industry          String   @unique
  salaryRanges      Json[]
  growthRate        Float
  demandLevel       String
  topSkills         String[]
  marketOutlook     String
  keyTrends         String[]
  recommendedSkills String[]
  lastUpdated       DateTime @default(now())
  nextUpdate        DateTime
  users             User[]

  @@index([industry])
}
